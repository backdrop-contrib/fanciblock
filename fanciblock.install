<?php
/**
 * @file
 * Install, update and uninstall functions for the fanciblock module.
 */

function fanciblock_install() {
  global $user;
  $filepath = drupal_get_path('module', 'fanciblock') . '/tulips.jpg';
  $file = entity_create('file', array());
  $file->filename = basename($filepath);
  $file->filepath = $filepath;
  $file->filemime = file_get_mimetype($filepath);
  $file->filesize = filesize($filepath);
  $file->uid = $user->uid;
  $file->status = FILE_STATUS_PERMANENT;
  $file->uri = $filepath;
  $file->display = 1;
  $file->description = '';
  
  $fanciblock_directory = 'public://fanciblock_images'; 
  file_prepare_directory($fanciblock_directory, FILE_CREATE_DIRECTORY);
  
  $file = file_copy($file, $fanciblock_directory, FILE_EXISTS_REPLACE);
  file_usage_add($file, 'fanciblock', 'user', 1);
  
  // Set default image
  $config = config('fanciblock.settings');
  $config->set('default_fid', $file->fid);
  $config->set('default_fanciblock_uri', $file->uri);
  $config->save();
}

/**
 * Move individual block settings from layouts to the fanciblocks settings file.
 */
function fanciblock_update_1000() {
  $fanciblocks = fanciblock_load_all();
  $layouts = layout_load_all();

  // We're going to load layout configs directly instead of using Layout API so
  // that no hooks fire when we change things.
  $config_names = config_get_names_with_prefix('layout.layout.');
  foreach ($config_names as $config_file) {
    $config = config($config_file);
    $block_data = $config->get();
    foreach ($block_data['content'] as $uuid => $block) {
      if ($block['data']['module'] == 'fanciblock' && isset($block['data']['settings']['block_settings']['fanciblock_name'])) {
        $fanciblock_name = $block['data']['settings']['block_settings']['fanciblock_name'];
        if (isset($fanciblocks[$fanciblock_name])) {
          $block_data['content'][$uuid]['plugin'] = 'fanciblock:' . $fanciblock_name;
          $block_data['content'][$uuid]['data']['delta'] = $fanciblock_name;
          $block_data['content'][$uuid]['data']['settings']['block_settings'] = array();
        }
      }
    }
    $config->setData($block_data);
    $config->save();
  }
  layout_reset_caches();
}

/**
 * Update settings data structure.
 */
function fanciblock_update_1001() {
  $config = config('fanciblock.settings');
  $data = $config->get();
  foreach ($data as $key => $item) {
    if (is_array($item)) {
      $block = $item;
      $settings = _flatten_fanciblock_settings($block['settings']);
      if (empty($settings['icon-bg-color-status'])) {
        $settings['icon-bg-color'] = '';
      }
      if (empty($settings['icon-border-status'])) {
        $settings['icon-border-width'] = 0;
      }
      if (empty($settings['box-bg-color-status'])) {
        $settings['box-bg-color'] = '';
      }
      if (empty($settings['box-border-status'])) {
        $settings['box-border-width'] = 0;
      }
      unset($settings['icon-bg-color-status']);
      unset($settings['icon-border-status']);
      unset($settings['box-bg-color-status']);
      unset($settings['box-border-status']);
      $data[$key]['settings'] = $settings;
    }
  }
  $config->setData($data);
  $config->save();
}
